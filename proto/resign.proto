syntax = "proto3";

package resign;
import "google/protobuf/empty.proto";

message Identity {
  bytes key_blob = 1;
  bytes comment  = 2;
}

message IdentitiesResponse {
  repeated Identity identities = 1;
}

message SignRequest {
  bytes key_blob = 1;
  bytes data     = 2;
  uint32 flags   = 3;
}

message SignResponse {
  bytes signature = 1;
}

service SshAgent {
  // https://datatracker.ietf.org/doc/html/draft-miller-ssh-agent#section-4.4
  rpc Identities (google.protobuf.Empty) returns (IdentitiesResponse);
  // https://datatracker.ietf.org/doc/html/draft-miller-ssh-agent#section-4.5
  rpc Sign (SignRequest) returns (SignResponse);
}

message PublicResponse {
  bytes key = 1;
}

enum HashAlgorithm {
  MD5 = 0;
  SHA1 = 1;
  RipeMD = 2;
  SHA256 = 3;
  SHA384 = 4;
  SHA512 = 5;
  SHA224 = 6;
}

message SqSignRequest {
  HashAlgorithm hash_algo = 1;
  bytes digest            = 2;
}

message AcceptableHashesResponse {
  repeated HashAlgorithm hash_algos = 1;
}

service Signer {
  rpc Public(google.protobuf.Empty) returns (PublicResponse);
  rpc Sign(SqSignRequest) returns (google.protobuf.Empty);
  rpc AcceptableHashes(google.protobuf.Empty) returns (AcceptableHashesResponse);
}
